<!DOCTYPE html>
<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0"/>
	<title>InternetThoughts</title>
	<link rel="shortcut icon" type="img/png" href="https://ucarecdn.com/1c101c25-b875-4e4d-9a90-9cb40c2a20d3/Favicon.png">
	<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.8/css/materialize.min.css">
	<link href="https://ucarecdn.com/aff15d85-ab75-416b-981b-2a7126a7a157/style.css" type="text/css" rel="stylesheet" media="screen,projection"/>
	<script type="text/javascript" src="https://ucarecdn.com/e65a54c9-2b6d-4c35-95d0-805fb8ba988b/paperfullmin.js"></script>
	<style type="text/css">
		.dialog nav{
			background-color: white;
			box-shadow: none;
		}
	</style>
	<script type="text/paperscript" canvas="canvas">
		// The amount of symbol we want to place;
		var count = 100;

		// Create a symbol, which we will use to place instances of later:
		var path = new Path.Circle({
		center: new Point(0, 0),
		radius: 30,
		fillColor: '#FFECB3',
		strokeColor: 'white'
	});

	var symbol = new SymbolDefinition(path);

	// Place the instances of the symbol:
	for (var i = 0; i < count; i++) {
	// The center position is a random point in the view:
	var center = Point.random() * view.size;
	var placed = symbol.place(center);
	var scale = (i + 1) / count;
	placed.scale(scale);
	placed.data.vector = new Point({
	angle: Math.random() * 360,
	length : scale * Math.random() / 5
});
}

var vector = new Point({
angle: 45,
length: 0
});

var mouseVector = vector.clone();

function onMouseMove(event) {
mouseVector = view.center - event.point;
}

// The onFrame function is called up to 60 times a second:
function onFrame(event) {
// Run through the active layer's children list and change
// the position of the placed symbols:
for (var i = 0; i < count; i++) {
var item = project.activeLayer.children[i];

// Move the item 1/20th of its width to the right. This way
// larger circles move faster than smaller circles:
item.position.x += item.bounds.width / 20;

// If the item has left the view on the right, move it back
// to the left:
if (item.bounds.left > view.size.width) {
item.position.x = -item.bounds.width;
}
}
}

function keepInView(item) {
var position = item.position;
var itemBounds = item.bounds;
var bounds = view.bounds;
if (itemBounds.left > bounds.width) {
position.x = -item.bounds.width;
}

if (position.x < -itemBounds.width) {
position.x = bounds.width + itemBounds.width;
}

if (itemBounds.top > view.size.height) {
position.y = -itemBounds.height;
}

if (position.y < -itemBounds.height) {
position.y = bounds.height  + itemBounds.height / 2;
}
}
</script>
</head>
<body>
	<canvas id="canvas" resize hidpi="off" style="/*background:black; -webkit-filter: blur(4px);*/"></canvas>
  <nav class="light-blue lighten-1" role="navigation" id="navBar">
    <div class="nav-wrapper container">
      <ul class="right hide-on-med-and-down">
        <li><a href="https://github.com/tash-had/internet-thoughts" target="_blank">View Source</a></li>
        <li><a href="javascript:void(0);" onclick="aboutClick();">About</a></li>
      </ul>

      <ul id="nav-mobile" class="side-nav">
        <li><a href="https://github.com/tash-had/internet-thoughts" target="_blank">View Source</a></li>
        <li><a href="javascript:void(0);" onclick="aboutClick();">About</a></li>
      </ul>
      <a href="#" data-activates="nav-mobile" class="button-collapse"><i class="material-icons">menu</i></a>
    </div>
</nav>
<div class="section no-pad-bot" id="index-banner">
	<div class="container">
		<br><br>
		<div class="row center">
			<img id="logoImg" src="https://github.com/tash-had/YHack_2016/blob/master/views/photos/logoInnerShadow.png?raw=true" height="30%" width="40%" >
		</div>
		<div class="row center">
			<form action ="/results" method = "GET" >
				<input type = "text", placeholder = "Search a topic..." name = "input" id="searchBar"></input><br><br>
				<button id="searchBtn" class="btn-large waves-effect waves-light orange">SHOW ME INFO</button>
			</form>
		</div>
		<br><br>

	</div>
</div>

<!--  Scripts-->
<script src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.8/js/materialize.min.js"></script>
<script src="https://ucarecdn.com/67535bfa-0aab-4480-b849-924b27dbdaa1/init.js"></script>
<script src="https://cdn.rawgit.com/alertifyjs/alertify.js/v1.0.10/dist/js/alertify.js"></script>
<script type="text/javascript">
	var isOpera = (!!window.opr && !!opr.addons) || !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;
    // Firefox 1.0+
    var isFirefox = typeof InstallTrigger !== 'undefined';
    // Safari 3.0+ "[object HTMLElementConstructor]" 
    var isSafari = Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0 || (function (p) { return p.toString() === "[object SafariRemoteNotification]"; })(!window['safari'] || safari.pushNotification);
    // Internet Explorer 6-11
    var isIE = /*@cc_on!@*/false || !!document.documentMode;
    // Edge 20+
    var isEdge = !isIE && !!window.StyleMedia;
    // Chrome 1+
    var isChrome = !!window.chrome && !!window.chrome.webstore;
    // Blink engine detection
    var isBlink = (isChrome || isOpera) && !!window.CSS;

    if(isOpera || isFirefox || isSafari || isIE || isEdge){alert("Internet-thoughts is optimized for Google Chrome. Please switch your browser.");}
</script>
<script type="text/javascript">
	window.mobilecheck = function() {
		var check = false;
		(function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);
		return check;
	};
	if(mobilecheck()){
		$("#logoImg").attr("width", "80%"); 
		$("#logoImg").attr("height", "40%");
		$("#searchBar").css("width", "80%");  
	}
	function aboutClick(){
		alertify.alert("Internet-thoughts searches the internet for a query, analyzes the data it finds using a sentiment analysis engine, and returns the general outlook on the query based on the data. Internet-thoughts reads through tons of data from Twitter, Reddit and Tumblr to dermine sentiment. Internet-thoughts was built for YHack 2016 at Yale University. View the repo <a href='https://github.com/tash-had/internet-thoughts' target='_blank'>here</a>");
	}
	localStorage.setItem("numReloads", 0);
</script>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-43160348-12', 'auto');
  ga('send', 'pageview');

</script>
</body>

</html>
